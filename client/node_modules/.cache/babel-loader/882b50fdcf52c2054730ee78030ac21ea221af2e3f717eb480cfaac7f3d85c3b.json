{"ast":null,"code":"var _jsxFileName = \"/Users/aishwaryakumar/HSyE Website/untitled/client/src/components/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader() {\n  _s();\n  useEffect(() => {\n    // Retrieve the data URL from local storage\n    const storedDataUrl = localStorage.getItem(\"file\");\n\n    // Convert the data URL to a File object\n    const uploadedFile = dataURLtoFile(storedDataUrl, \"file.xls\");\n\n    // Function to convert data URL to a File object\n    function dataURLtoFile(dataUrl, filename) {\n      if (dataUrl != null) {\n        const byteString = atob(dataUrl.split(\",\")[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n          ia[i] = byteString.charCodeAt(i);\n        }\n        const blob = new Blob([ab], {\n          type: \"application/octet-stream\"\n        });\n\n        // Create a File object from the Blob\n        const file = new File([blob], filename);\n        return file;\n      }\n    }\n\n    // Function to upload the file to the server\n    function uploadFile(file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Make a POST request to your server to handle the file upload using fetch\n      fetch(\"http://127.0.0.1:5002/upload\", {\n        method: \"POST\",\n        body: formData\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"File uploaded successfully.\");\n        } else {\n          console.error(\"Error uploading file:\", response.statusText);\n        }\n      }).catch(error => {\n        console.error(\"Error uploading file:\", error);\n      });\n    }\n\n    // Upload the retrieved file\n    uploadFile(uploadedFile);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","FileUploader","_s","storedDataUrl","localStorage","getItem","uploadedFile","dataURLtoFile","dataUrl","filename","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","blob","Blob","type","file","File","uploadFile","formData","FormData","append","fetch","method","body","then","response","ok","console","log","error","statusText","catch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aishwaryakumar/HSyE Website/untitled/client/src/components/FileUploader.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nfunction FileUploader() {\n  useEffect(() => {\n    // Retrieve the data URL from local storage\n    const storedDataUrl = localStorage.getItem(\"file\");\n\n    // Convert the data URL to a File object\n    const uploadedFile = dataURLtoFile(storedDataUrl, \"file.xls\");\n\n    // Function to convert data URL to a File object\n    function dataURLtoFile(dataUrl, filename) {\n      if (dataUrl != null) {\n        const byteString = atob(dataUrl.split(\",\")[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n          ia[i] = byteString.charCodeAt(i);\n        }\n        const blob = new Blob([ab], { type: \"application/octet-stream\" });\n\n        // Create a File object from the Blob\n        const file = new File([blob], filename);\n\n        return file;\n      }\n    }\n\n    // Function to upload the file to the server\n    function uploadFile(file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      // Make a POST request to your server to handle the file upload using fetch\n      fetch(\"http://127.0.0.1:5002/upload\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => {\n          if (response.ok) {\n            console.log(\"File uploaded successfully.\");\n          } else {\n            console.error(\"Error uploading file:\", response.statusText);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error uploading file:\", error);\n        });\n    }\n\n    // Upload the retrieved file\n    uploadFile(uploadedFile);\n  }, []);\n\n  return (\n    <div>\n      {/* You can render UI elements related to file upload if needed */}\n    </div>\n  );\n}\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtBJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;IAElD;IACA,MAAMC,YAAY,GAAGC,aAAa,CAACJ,aAAa,EAAE,UAAU,CAAC;;IAE7D;IACA,SAASI,aAAaA,CAACC,OAAO,EAAEC,QAAQ,EAAE;MACxC,IAAID,OAAO,IAAI,IAAI,EAAE;QACnB,MAAME,UAAU,GAAGC,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAMC,EAAE,GAAG,IAAIC,WAAW,CAACJ,UAAU,CAACK,MAAM,CAAC;QAC7C,MAAMC,EAAE,GAAG,IAAIC,UAAU,CAACJ,EAAE,CAAC;QAC7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,UAAU,CAACK,MAAM,EAAEG,CAAC,EAAE,EAAE;UAC1CF,EAAE,CAACE,CAAC,CAAC,GAAGR,UAAU,CAACS,UAAU,CAACD,CAAC,CAAC;QAClC;QACA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACR,EAAE,CAAC,EAAE;UAAES,IAAI,EAAE;QAA2B,CAAC,CAAC;;QAEjE;QACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAEX,QAAQ,CAAC;QAEvC,OAAOc,IAAI;MACb;IACF;;IAEA;IACA,SAASE,UAAUA,CAACF,IAAI,EAAE;MACxB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;;MAE7B;MACAM,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACfC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC5C,CAAC,MAAM;UACLD,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,UAAU,CAAC;QAC7D;MACF,CAAC,CAAC,CACDC,KAAK,CAAEF,KAAK,IAAK;QAChBF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;;IAEA;IACAZ,UAAU,CAACnB,YAAY,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACzC,EAAA,CAzDQD,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AA2DrB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}