{"ast":null,"code":"var _jsxFileName = \"/Users/aishwaryakumar/HSyE Website/untitled/client/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { navItems, dropdownItems } from \"./NavItems\";\nimport Dropdown from \"./Dropdown\";\nimport SettingsPopup from './SettingsPopup'; // Import your SettingsPopup component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getDropdownItems = title => {\n  return dropdownItems[title] || [];\n};\nfunction Navbar() {\n  _s();\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [settingsOpen, setSettingsOpen] = useState(false); // State to control the SettingsPopup\n  const [settings, setSettings] = useState({\n    graphType: 'Deterministic'\n  }); // Add the settings state\n  const navigate = useNavigate();\n  const handleMouseEnter = itemTitle => {\n    setActiveDropdown(itemTitle);\n  };\n  const handleMouseLeave = () => {\n    setActiveDropdown(null);\n  };\n  const handleClickCChart = () => {\n    navigate(\"/c-Chart\");\n  };\n  const handleOpenSettings = () => {\n    setSettingsOpen(true);\n  };\n  const handleCloseSettings = () => {\n    setSettingsOpen(false);\n  };\n  const handleSaveSettings = newSettings => {\n    setSettings(newSettings);\n    handleCloseSettings();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-items\",\n        children: [navItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: item.cName,\n          onMouseEnter: () => handleMouseEnter(item.title),\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: item.path,\n            onClick: item.title === \"Charts\" ? handleClickCChart : null,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), activeDropdown === item.title && /*#__PURE__*/_jsxDEV(Dropdown, {\n            items: getDropdownItems(item.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenSettings,\n            children: \"User Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsPopup, {\n      style: {\n        background: '#015EA5'\n      },\n      isOpen: settingsOpen,\n      onClose: handleCloseSettings,\n      onSave: handleSaveSettings // This function is called when the settings are saved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Navbar, \"iSPQHzJJD688V980CLW4Z7bEIQI=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","useNavigate","navItems","dropdownItems","Dropdown","SettingsPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","getDropdownItems","title","Navbar","_s","activeDropdown","setActiveDropdown","settingsOpen","setSettingsOpen","settings","setSettings","graphType","navigate","handleMouseEnter","itemTitle","handleMouseLeave","handleClickCChart","handleOpenSettings","handleCloseSettings","handleSaveSettings","newSettings","children","className","map","item","cName","onMouseEnter","onMouseLeave","to","path","onClick","fileName","_jsxFileName","lineNumber","columnNumber","items","id","style","background","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/aishwaryakumar/HSyE Website/untitled/client/src/components/Navbar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { navItems, dropdownItems } from \"./NavItems\";\nimport Dropdown from \"./Dropdown\";\nimport SettingsPopup from './SettingsPopup';  // Import your SettingsPopup component\n\nconst getDropdownItems = (title) => {\n  return dropdownItems[title] || [];\n};\n\nfunction Navbar() {\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [settingsOpen, setSettingsOpen] = useState(false);  // State to control the SettingsPopup\n  const [settings, setSettings] = useState({ graphType: 'Deterministic' });  // Add the settings state\n  const navigate = useNavigate();\n\n  const handleMouseEnter = (itemTitle) => {\n    setActiveDropdown(itemTitle);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveDropdown(null);\n  };\n\n  const handleClickCChart = () => {\n    navigate(\"/c-Chart\");\n  };\n\n  const handleOpenSettings = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleCloseSettings = () => {\n    setSettingsOpen(false);\n  };\n\n  const handleSaveSettings = (newSettings) => {\n    setSettings(newSettings);\n    handleCloseSettings();\n  };\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <ul className=\"nav-items\" >\n          {navItems.map((item) => (\n            <li\n              key={item.id}\n              className={item.cName}\n              onMouseEnter={() => handleMouseEnter(item.title)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <Link\n                to={item.path}\n                onClick={item.title === \"Charts\" ? handleClickCChart : null}\n              >\n                {item.title}\n              </Link>\n              {activeDropdown === item.title && (\n                <Dropdown items={getDropdownItems(item.title)} />\n              )}\n            </li>\n          ))}\n          <li className=\"nav-item\">\n            <button onClick={handleOpenSettings}>User Settings</button>\n          </li>\n        </ul>\n      </nav>\n      <SettingsPopup style={{ background: '#015EA5'}}\n        isOpen={settingsOpen}\n        onClose={handleCloseSettings}\n        onSave={handleSaveSettings}  // This function is called when the settings are saved\n      />\n    </>\n  );\n}\n\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}